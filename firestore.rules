
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ===============================================
    // Helper Functions
    // ===============================================
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isRequestDataOwner() {
      return isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    function isResourceOwner() {
      return isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // ===============================================
    // Rules for Collections with userId as documentId
    // ===============================================

    match /usuarios/{userId} {
      allow read, write: if isUser(userId);
    }
    
    match /consultationsMetadata/{userId} {
      allow read, write: if isUser(userId);
    }

    match /assinaturas/{userId} {
      allow read: if isUser(userId);
      allow write: if false; 
    }

    // ===============================================
    // Default Rules for User-Owned Collections
    // ===============================================

    function userOwnedResources() {
      return [
        'consultations', 'userGoals', 'lancamentosFinanceiros', 'vendas',
        'ordensServico', 'agendamentos', 'clientes', 'ordensDeProducao',
        'produtosServicos', 'fechamentosCaixa', 'sessoesCaixa', 'contasPagar',
        'contasReceber', 'custos', 'custosFixosConfigurados'
      ];
    }

    match /{collection}/{docId}
      where collection in userOwnedResources() {
        allow create: if isRequestDataOwner();
        allow get, update, delete: if isResourceOwner();
        allow list: if isSignedIn();
    }
    
    // ===============================================
    // Special Rules
    // ===============================================

    match /metasFinanceiras/{docId} {
      // ID format is userId_anoMes
      allow create, read, update, delete: if isSignedIn() && request.auth.uid == docId.split('_')[0];
    }
    
    // ========== FALLBACK DE SEGURANÇA ==========
    // Bloqueia qualquer acesso a coleções não explicitamente permitidas acima.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
