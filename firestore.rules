
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ========== FUNÇÕES UTILITÁRIAS ==========
    function isSignedIn() {
      return request.auth != null;
    }

    // Verifica se o UID do usuário autenticado é o mesmo que o campo 'userId' no documento existente.
    function isResourceOwner() {
      return isSignedIn() && request.auth.uid == resource.data.userId;
    }

    // Verifica se o UID do usuário autenticado é o mesmo que o campo 'userId' nos dados da requisição (para criação).
    function isRequestDataOwner() {
      return isSignedIn() && request.auth.uid == request.resource.data.userId;
    }

    // Verifica se o ID do documento é o mesmo que o UID do usuário autenticado.
    function docIdIsSelf(docId) {
      return isSignedIn() && request.auth.uid == docId;
    }

    // Garante que o campo userId não está sendo alterado durante uma atualização.
    function userIdUnchanged() {
      return request.resource.data.userId == resource.data.userId;
    }

    // ========== REGRAS POR COLEÇÃO ==========

    // Perfil do usuário (ID = UID)
    match /usuarios/{userId} {
      // Usuário só pode criar seu próprio perfil se o ID do doc for o seu UID.
      // Não se pode definir 'userId' no corpo aqui, pois o ID do doc é o UID.
      allow create: if docIdIsSelf(userId) && request.resource.data.userId == null; // Ou remova userId do corpo do doc
      allow read, update: if docIdIsSelf(userId);
      // Delete geralmente não é permitido ou é uma operação de soft delete controlada.
    }

    // Metadados da consulta (ID = UID) - Mantido conforme fornecido
    match /consultationsMetadata/{userId} {
      allow read, write: if docIdIsSelf(userId);
    }

    // Dados completos da consulta - Mantido conforme fornecido
    match /consultations/{consultationId} {
      allow create: if isRequestDataOwner();
      allow read, update, delete: if isResourceOwner();
    }

    // Metas do usuário (geradas pela IA de metas) - Mantido conforme fornecido
    match /userGoals/{goalId} {
      allow create: if isRequestDataOwner();
      allow read, update, delete: if isResourceOwner();
    }

    // ======== Coleções padrão do Maestro Operacional =========

    match /lancamentosFinanceiros/{id} {
      allow create: if isRequestDataOwner();
      allow read, delete: if isResourceOwner();
      allow update: if isResourceOwner() && userIdUnchanged();
    }

    match /metasFinanceiras/{id} {
      allow create: if isRequestDataOwner();
      allow read, delete: if isResourceOwner();
      allow update: if isResourceOwner() && userIdUnchanged();
    }

    match /vendas/{id} {
      allow create: if isRequestDataOwner();
      allow read, delete: if isResourceOwner();
      allow update: if isResourceOwner() && userIdUnchanged();
    }

    match /ordensServico/{id} {
      allow create: if isRequestDataOwner();
      allow read, delete: if isResourceOwner();
      allow update: if isResourceOwner() && userIdUnchanged();
    }

    match /agendamentos/{id} {
      allow create: if isRequestDataOwner();
      allow read, delete: if isResourceOwner();
      allow update: if isResourceOwner() && userIdUnchanged();
    }

    match /clientes/{id} {
      allow create: if isRequestDataOwner();
      allow read, delete: if isResourceOwner();
      allow update: if isResourceOwner() && userIdUnchanged();
    }

    match /ordensDeProducao/{id} {
      allow create: if isRequestDataOwner();
      allow read, delete: if isResourceOwner();
      allow update: if isResourceOwner() && userIdUnchanged();
    }

    match /produtosServicos/{id} {
      allow create: if isRequestDataOwner();
      allow read, delete: if isResourceOwner();
      allow update: if isResourceOwner() && userIdUnchanged();
    }

    // (Opcional) futuras coleções públicas ou regras especiais
    // match /itensPublicos/{id} {
    //   allow read: if true;
    //   allow write: if false; // Exemplo: escrita controlada por Cloud Functions ou admin
    // }
  }
}
